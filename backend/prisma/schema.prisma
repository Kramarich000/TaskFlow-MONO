// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default(uuid()) @db.Uuid
  email     String   @unique @db.VarChar(320)
  login     String   @unique @db.VarChar(30)
  password  String
  createdAt DateTime @default(now())
  isActive  Boolean  @default(true)
  updatedAt DateTime @updatedAt

  boards        Board[]
  refreshTokens RefreshToken[]

  @@map("users")
}

model Board {
  id         Int      @id @default(autoincrement())
  uuid       String   @unique @default(uuid()) @db.Uuid
  title      String   @db.VarChar(64)
  color      String   @default("FFFFFF") @db.VarChar(6)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isPinned   Boolean  @default(false)
  isFavorite Boolean  @default(false)

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  tasks Task[]

  @@unique([userId, title])
  @@map("boards")
}

model Task {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique @default(uuid()) @db.Uuid
  title       String   @unique @db.VarChar(100)
  color       String   @default("FFFFFF") @db.VarChar(6)
  description String?  @db.Text
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  boardId Int
  board   Board @relation(fields: [boardId], references: [id], onDelete: Cascade)

  @@map("tasks")
}

model RefreshToken {
  id         Int      @id @default(autoincrement())
  token      String   @unique @db.VarChar(1024)
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  revoked    Boolean  @default(false)
  ipAddress  String?  @db.VarChar(45)
  userAgent  String?  @db.VarChar(512)
  referrer   String?  @db.VarChar(2048)
  rememberMe Boolean  @default(false)

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}
